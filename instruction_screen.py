# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'instructions.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QMutex


class Ui_InstructionWindow(object):
    def __init__(self, Client):
        self.client = Client

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self._mutex = QMutex()
        self.instructions_label = QtWidgets.QLabel(self.centralwidget)
        self.instructions_label.setGeometry(QtCore.QRect(10, 10, 721, 431))
        self.instructions_label.setStyleSheet(" font-size: 25px;height: 15px;width: 30px;")
        self.instructions_label.setObjectName("instructions_label")
        self.close_button = QtWidgets.QPushButton(self.centralwidget)
        self.close_button.setGeometry(QtCore.QRect(270, 500, 231, 61))
        self.close_button.setStyleSheet(";background-color: rgb(162, 47, 255);\n"
                                        "font: 75 8pt \"Magneto\"; font-size: 35px;height: 20px;width: 45px;")
        self.close_button.setObjectName("close_button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.check_for_button(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.instructions_label.setText(_translate("MainWindow", "instructions:\n"
                                                                 "1.The game begins once you see a letter appear on the first row of the table\n"
                                                                 "2. The game is an open microphone game,\n"
                                                                 " so you wont need to mark a square if you want to insert to it,\n"
                                                                 " just say the word and the game will insert it to the category.\n"
                                                                 "3.When round ends you will see xxx on the squares in the row,\n"
                                                                 " and a new letter will appear in the row below\n"
                                                                 "4. you will need to speak loud, clear\n"
                                                                 " with a slight english accent and little pauses between your words\n"
                                                                 "5.sometimes the recording will be cut in the middle\n"
                                                                 " because there is a timer set on the recording length\n"
                                                                 " or the recording didnt understand the word you meant to say.\n"
                                                                 "for that you will just need to pause for a little and say it again\n"
                                                                 " loud and clear"))
        self.close_button.setText(_translate("MainWindow", "close"))

    def check_for_button(self, MainWindow):
        self.close_button.clicked.connect(lambda: self.closepressed(MainWindow))

    def closepressed(self, MainWindow):
        print("close pressed")
        self._mutex.lock()
        self.client.screen_state = 2
        self._mutex.unlock()
        MainWindow.close()


def show_instructions_win(window):
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    window.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
